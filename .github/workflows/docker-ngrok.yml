name: Docker + ngrok + Tests pytest
on: 
  push:
    branches: [ main, master ]

jobs:
  deploy-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install pytest dependencies
      run: |
        pip install pytest==7.4.0 requests==2.31.0
        
    - name: Build Docker image
      run: |
        docker build -t flask-app .
        
    - name: Deploy et r√©cup√©rer URL
      run: |
        # Installer ngrok
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update && sudo apt install ngrok
        
        # Configurer le token
        ngrok config add-authtoken ${{ secrets.NGROK_AUTHTOKEN }}
        
        # Lancer l'app Flask
        docker run -d -p 5000:5000 --name flask-container flask-app
        sleep 8
        
        # Lancer ngrok
        ngrok http 5000 --log=stdout > /tmp/ngrok.log 2>&1 &
        sleep 20
        
        # R√©cup√©rer l'URL
        NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | grep -o '"public_url":"[^"]*https[^"]*' | cut -d'"' -f4 | head -1)
        
        if [ -n "$NGROK_URL" ]; then
          echo "üåê Application accessible sur : $NGROK_URL"
          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV
        else
          echo "‚ùå Pas d'URL trouv√©e"
          cat /tmp/ngrok.log
          exit 1
        fi
        
    - name: Run pytest tests
      env:
        NGROK_URL: ${{ env.NGROK_URL }}
      run: |
        echo "üß™ === TESTS PYTEST ==="
        echo "URL test√©e : $NGROK_URL"
        pytest test_app.py -v --tb=short -s
        
    - name: Keep alive
      run: |
        echo ""
        echo "URL disponible pendant 120 secondes pour tests manuels : $NGROK_URL"
        sleep 30
        echo "URL disponible pendant 90 secondes pour tests manuels : $NGROK_URL"
        sleep 30
        echo "URL disponible pendant 60 secondes pour tests manuels : $NGROK_URL"
        sleep 60
        echo "‚èπÔ∏è Preview termin√©"
