name: Docker + ngrok + Tests en temps réel
on: 
  push:
    branches: [ main, master ]

jobs:
  deploy-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
        
    - name: Build Docker image
      run: |
        docker build -t flask-app .
        
    - name: Deploy, test et maintenir actif
      run: |
        # Installer ngrok
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update && sudo apt install ngrok
        
        # Configurer le token
        ngrok config add-authtoken ${{ secrets.NGROK_AUTHTOKEN }}
        
        # Lancer l'app Flask
        docker run -d -p 5000:5000 --name flask-container flask-app
        sleep 8
        
        # Lancer ngrok
        ngrok http 5000 --log=stdout > /tmp/ngrok.log 2>&1 &
        sleep 20
        
        # Récupérer l'URL
        NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | grep -o '"public_url":"[^"]*https[^"]*' | cut -d'"' -f4 | head -1)
        
        if [ -n "$NGROK_URL" ]; then
          echo "🌐 Application accessible sur : $NGROK_URL"
          
          # TESTS IMMÉDIATEMENT pendant que c'est actif
          echo ""
          echo "🧪 === TESTS AUTOMATIQUES ==="
          
          # Test 1: Page d'accueil
          echo "🔍 Test 1: Page d'accueil (/) :"
          status=$(curl -s -o /dev/null -w "%{http_code}" "$NGROK_URL/")
          if [ "$status" = "200" ]; then
            echo "✅ / → $status OK"
          else
            echo "❌ / → $status ÉCHEC"
          fi
          
          # Test 2: Page exercices
          echo "🔍 Test 2: Page exercices (/exercices/) :"
          status=$(curl -s -o /dev/null -w "%{http_code}" "$NGROK_URL/exercices/")
          if [ "$status" = "200" ]; then
            echo "✅ /exercices/ → $status OK"
          else
            echo "❌ /exercices/ → $status ÉCHEC"
          fi
          
          # Test 3: Page contact
          echo "🔍 Test 3: Page contact (/contact/) :"
          status=$(curl -s -o /dev/null -w "%{http_code}" "$NGROK_URL/contact/")
          if [ "$status" = "200" ]; then
            echo "✅ /contact/ → $status OK"
          else
            echo "❌ /contact/ → $status ÉCHEC"
          fi
          
          # Test 4: Calcul carré
          echo "🔍 Test 4: Calcul carré (/calcul_carre/5) :"
          status=$(curl -s -o /dev/null -w "%{http_code}" "$NGROK_URL/calcul_carre/5")
          if [ "$status" = "200" ]; then
            echo "✅ /calcul_carre/5 → $status OK"
          else
            echo "❌ /calcul_carre/5 → $status ÉCHEC"
          fi
          
          # Test 5: Somme
          echo "🔍 Test 5: Somme (/somme/10/15) :"
          status=$(curl -s -o /dev/null -w "%{http_code}" "$NGROK_URL/somme/10/15")
          if [ "$status" = "200" ]; then
            echo "✅ /somme/10/15 → $status OK"
          else
            echo "❌ /somme/10/15 → $status ÉCHEC"
          fi
          
          echo ""
          echo "🎉 === TESTS TERMINÉS ==="
          echo ""
          echo "⏰ URL disponible pendant 120 secondes pour tests manuels :"
          echo "🌐 $NGROK_URL"
          echo ""
          
          # Maintenir actif 2 minutes pour tests manuels
          for i in {120..1}; do
            echo "⏱️  Reste $i secondes... URL: $NGROK_URL"
            sleep 1
          done
          
          echo "⏹️ Preview terminé"
          
        else
          echo "❌ Pas d'URL trouvée"
          cat /tmp/ngrok.log
          exit 1
        fi
